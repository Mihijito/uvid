{"ast":null,"code":"var _jsxFileName = \"/home/mihijito/Documents/Universit\\xE9/Hiver2020/Web_2/uvid/app/src/app/components/ConferenceRoom.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket.connect('http://localhost:8080');\nsocket.emit('connection');\n\nconst ConferenceRoom = () => {\n  const {\n    username,\n    roomId\n  } = useParams();\n  const shareLinkPresenter = useRef(null);\n  useEffect(() => {\n    console.log(username);\n    if (username && roomId) socket.emit('connect-to-room', JSON.stringify({\n      username,\n      roomId\n    }));\n  }, [username, roomId]);\n  useEffect(() => {\n    if (roomId && shareLinkPresenter.current) shareLinkPresenter.current.classList.remove('hidden');\n  }, [roomId]);\n  useEffect(() => () => {\n    if (username && roomId) {\n      console.log(username);\n      console.log('lmao');\n      console.log(roomId);\n      socket.emit('disconnect', JSON.stringify({\n        username,\n        roomId\n      }));\n    }\n  }, [username, roomId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-12 mb-12 flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, `${username}'s room`), /*#__PURE__*/React.createElement(\"div\", {\n    ref: shareLinkPresenter,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, `Room link: ${`http://localhost:8080/${shareLink}`}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Peeps talkin and stuff\"));\n};\n\nexport default ConferenceRoom;","map":{"version":3,"sources":["/home/mihijito/Documents/UniversitÃ©/Hiver2020/Web_2/uvid/app/src/app/components/ConferenceRoom.tsx"],"names":["React","useEffect","useRef","useParams","openSocket","socket","connect","emit","ConferenceRoom","username","roomId","shareLinkPresenter","console","log","JSON","stringify","current","classList","remove","shareLink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,MAAMC,MAAM,GAAGD,UAAU,CAACE,OAAX,CAAmB,uBAAnB,CAAf;AACAD,MAAM,CAACE,IAAP,CAAY,YAAZ;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBP,SAAS,EAAtC;AACA,QAAMQ,kBAAkB,GAAGT,MAAM,CAAiB,IAAjB,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,QAAIA,QAAQ,IAAIC,MAAhB,EAAwBL,MAAM,CAACE,IAAP,CAAY,iBAAZ,EAA+BO,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf,CAA/B;AACzB,GAHQ,EAGN,CAACD,QAAD,EAAWC,MAAX,CAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAM,IAAIC,kBAAkB,CAACK,OAAjC,EAA0CL,kBAAkB,CAACK,OAAnB,CAA2BC,SAA3B,CAAqCC,MAArC,CAA4C,QAA5C;AAC3C,GAFQ,EAEN,CAACR,MAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM,MAAM;AACpB,QAAIQ,QAAQ,IAAIC,MAAhB,EAAwB;AACtBE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,MAAAA,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BO,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf,CAA1B;AACD;AACF,GAPQ,EAON,CAACD,QAAD,EAAWC,MAAX,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAED,QAAS,SADf,CADF,eAIE;AACE,IAAA,GAAG,EAAEE,kBADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,cAAc,yBAAwBQ,SAAU,EAAE,EAHtD,CAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,CADF;AAeD,CArCD;;AAuCA,eAAeX,cAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\n\nconst socket = openSocket.connect('http://localhost:8080');\nsocket.emit('connection');\n\nconst ConferenceRoom: React.FC = () => {\n  const { username, roomId } = useParams();\n  const shareLinkPresenter = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    console.log(username);\n    if (username && roomId) socket.emit('connect-to-room', JSON.stringify({ username, roomId }));\n  }, [username, roomId]);\n\n  useEffect(() => {\n    if (roomId && shareLinkPresenter.current) shareLinkPresenter.current.classList.remove('hidden');\n  }, [roomId]);\n\n  useEffect(() => () => {\n    if (username && roomId) {\n      console.log(username);\n      console.log('lmao');\n      console.log(roomId);\n      socket.emit('disconnect', JSON.stringify({ username, roomId }));\n    }\n  }, [username, roomId]);\n\n  return (\n    <div className=\"mt-12 mb-12 flex flex-col items-center\">\n      <div>\n        {`${username}'s room`}\n      </div>\n      <div\n        ref={shareLinkPresenter}\n        className=\"hidden\">\n        {`Room link: ${`http://localhost:8080/${shareLink}`}`}\n      </div>\n      <div>\n        Peeps talkin and stuff\n    </div>\n    </div>\n  )\n};\n\nexport default ConferenceRoom;"]},"metadata":{},"sourceType":"module"}