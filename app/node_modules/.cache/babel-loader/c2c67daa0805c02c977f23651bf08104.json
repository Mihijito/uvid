{"ast":null,"code":"var _jsxFileName = \"/home/mihijito/Documents/Universit\\xE9/Hiver2020/Web_2/uvid/app/src/app/components/ConferenceRoom.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket.connect('http://localhost:8080');\nsocket.emit('connection');\n\nconst ConferenceRoom = () => {\n  const {\n    username,\n    roomId\n  } = useParams();\n  const shareLinkPresenter = useRef(null);\n  const [connectedUsers, updateConnectedUsers] = useState([]);\n  useEffect(() => {\n    console.log(username);\n    if (username && roomId) socket.emit('connect-to-room', JSON.stringify({\n      username,\n      roomId\n    }));\n  }, [username, roomId]);\n  useEffect(() => {\n    socket.on('update-user-list', stringUserList => {\n      console.log(stringUserList);\n      console.log(JSON.parse(stringUserList));\n      const userList = JSON.parse(stringUserList);\n      console.log(userList);\n      updateConnectedUsers(userList);\n    });\n    console.log(`Connected users ${connectedUsers}`);\n    return () => {\n      socket.emit('disconnect');\n    };\n  }, [connectedUsers]);\n  useEffect(() => {\n    if (roomId && shareLinkPresenter.current) shareLinkPresenter.current.classList.remove('hidden');\n  }, [roomId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-12 mb-12 flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, `${username}'s room`), /*#__PURE__*/React.createElement(\"div\", {\n    ref: shareLinkPresenter,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, `Room link: ${`http://localhost:8080/${roomId}`}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Peeps talkin and stuff\"));\n};\n\nexport default ConferenceRoom;","map":{"version":3,"sources":["/home/mihijito/Documents/UniversitÃ©/Hiver2020/Web_2/uvid/app/src/app/components/ConferenceRoom.tsx"],"names":["React","useEffect","useState","useRef","useParams","openSocket","socket","connect","emit","ConferenceRoom","username","roomId","shareLinkPresenter","connectedUsers","updateConnectedUsers","console","log","JSON","stringify","on","stringUserList","parse","userList","current","classList","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,MAAMC,MAAM,GAAGD,UAAU,CAACE,OAAX,CAAmB,uBAAnB,CAAf;AACAD,MAAM,CAACE,IAAP,CAAY,YAAZ;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBP,SAAS,EAAtC;AACA,QAAMQ,kBAAkB,GAAGT,MAAM,CAAiB,IAAjB,CAAjC;AACA,QAAM,CAACU,cAAD,EAAiBC,oBAAjB,IAAyCZ,QAAQ,CAAW,EAAX,CAAvD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,QAAIA,QAAQ,IAAIC,MAAhB,EAAwBL,MAAM,CAACE,IAAP,CAAY,iBAAZ,EAA+BS,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf,CAA/B;AAEzB,GAJQ,EAIN,CAACD,QAAD,EAAWC,MAAX,CAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACa,EAAP,CAAU,kBAAV,EAA+BC,cAAD,IAA4B;AACxDL,MAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACI,KAAL,CAAWD,cAAX,CAAZ;AACA,YAAME,QAAQ,GAAGL,IAAI,CAACI,KAAL,CAAWD,cAAX,CAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAR,MAAAA,oBAAoB,CAACQ,QAAD,CAApB;AACD,KAND;AAOAP,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBH,cAAe,EAA9C;AAEA,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACE,IAAP,CAAY,YAAZ;AACD,KAFD;AAGD,GAbQ,EAaN,CAACK,cAAD,CAbM,CAAT;AAeAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAM,IAAIC,kBAAkB,CAACW,OAAjC,EAA0CX,kBAAkB,CAACW,OAAnB,CAA2BC,SAA3B,CAAqCC,MAArC,CAA4C,QAA5C;AAC3C,GAFQ,EAEN,CAACd,MAAD,CAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAED,QAAS,SADf,CADF,eAIE;AACE,IAAA,GAAG,EAAEE,kBADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,cAAc,yBAAwBD,MAAO,EAAE,EAHnD,CAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,CADF;AAeD,CA9CD;;AAgDA,eAAeF,cAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\n\nconst socket = openSocket.connect('http://localhost:8080');\nsocket.emit('connection');\n\nconst ConferenceRoom: React.FC = () => {\n  const { username, roomId } = useParams();\n  const shareLinkPresenter = useRef<HTMLDivElement>(null);\n  const [connectedUsers, updateConnectedUsers] = useState<string[]>([]);\n\n  useEffect(() => {\n    console.log(username);\n    if (username && roomId) socket.emit('connect-to-room', JSON.stringify({ username, roomId }));\n\n  }, [username, roomId]);\n\n  useEffect(() => {\n    socket.on('update-user-list', (stringUserList: string) => {\n      console.log(stringUserList);\n      console.log(JSON.parse(stringUserList));\n      const userList = JSON.parse(stringUserList);\n      console.log(userList);\n      updateConnectedUsers(userList);\n    });\n    console.log(`Connected users ${connectedUsers}`);\n\n    return () => {\n      socket.emit('disconnect');\n    }\n  }, [connectedUsers])\n\n  useEffect(() => {\n    if (roomId && shareLinkPresenter.current) shareLinkPresenter.current.classList.remove('hidden');\n  }, [roomId]);\n\n\n  return (\n    <div className=\"mt-12 mb-12 flex flex-col items-center\">\n      <div>\n        {`${username}'s room`}\n      </div>\n      <div\n        ref={shareLinkPresenter}\n        className=\"hidden\">\n        {`Room link: ${`http://localhost:8080/${roomId}`}`}\n      </div>\n      <div>\n        Peeps talkin and stuff\n    </div>\n    </div>\n  )\n};\n\nexport default ConferenceRoom;\n"]},"metadata":{},"sourceType":"module"}