{"ast":null,"code":"var _jsxFileName = \"/home/mihijito/Documents/Universit\\xE9/Hiver2020/Web_2/uvid/app/src/app/components/ConferenceRoom.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket.connect('http://localhost:8080');\nsocket.emit('connection');\n\nconst ConferenceRoom = () => {\n  const {\n    username\n  } = useParams();\n  const [shareLink, setShareLink] = useState('');\n  const shareLinkPresenter = useRef(null);\n  useEffect(() => {\n    console.log(username);\n    if (username) socket.emit('create-room', username);\n  }, [username]);\n  useEffect(() => {\n    socket.on('room-id', roomId => {\n      setShareLink(roomId);\n      if (shareLinkPresenter.current) shareLinkPresenter.current.classList.remove('hidden');\n    });\n  }, [username]);\n  useEffect(() => () => {\n    socket.emit('disconnect', username);\n  }, [username]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-12 mb-12 flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, `${username}'s room`), /*#__PURE__*/React.createElement(\"div\", {\n    ref: shareLinkPresenter,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, `Room link: ${`http://localhost:8080/${shareLink}`}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Peeps talkin and stuff\"));\n};\n\nexport default ConferenceRoom;","map":{"version":3,"sources":["/home/mihijito/Documents/UniversitÃ©/Hiver2020/Web_2/uvid/app/src/app/components/ConferenceRoom.tsx"],"names":["React","useEffect","useState","useRef","useParams","openSocket","socket","connect","emit","ConferenceRoom","username","shareLink","setShareLink","shareLinkPresenter","console","log","on","roomId","current","classList","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,MAAMC,MAAM,GAAGD,UAAU,CAACE,OAAX,CAAmB,uBAAnB,CAAf;AACAD,MAAM,CAACE,IAAP,CAAY,YAAZ;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAeN,SAAS,EAA9B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAMW,kBAAkB,GAAGV,MAAM,CAAiB,IAAjB,CAAjC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,QAAIA,QAAJ,EAAcJ,MAAM,CAACE,IAAP,CAAY,aAAZ,EAA2BE,QAA3B;AACf,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAsBC,MAAD,IAAoB;AACvCL,MAAAA,YAAY,CAACK,MAAD,CAAZ;AACA,UAAIJ,kBAAkB,CAACK,OAAvB,EAAgCL,kBAAkB,CAACK,OAAnB,CAA2BC,SAA3B,CAAqCC,MAArC,CAA4C,QAA5C;AACjC,KAHD;AAID,GALQ,EAKN,CAACV,QAAD,CALM,CAAT;AAOAT,EAAAA,SAAS,CAAC,MAAM,MAAM;AACpBK,IAAAA,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BE,QAA1B;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEA,QAAS,SADf,CADF,eAIE;AACE,IAAA,GAAG,EAAEG,kBADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,cAAc,yBAAwBF,SAAU,EAAE,EAHtD,CAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,CADF;AAeD,CApCD;;AAsCA,eAAeF,cAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\n\nconst socket = openSocket.connect('http://localhost:8080');\nsocket.emit('connection');\n\nconst ConferenceRoom: React.FC = () => {\n  const { username } = useParams();\n  const [shareLink, setShareLink] = useState<string>('');\n  const shareLinkPresenter = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    console.log(username);\n    if (username) socket.emit('create-room', username);\n  }, [username]);\n\n  useEffect(() => {\n    socket.on('room-id', (roomId: string) => {\n      setShareLink(roomId);\n      if (shareLinkPresenter.current) shareLinkPresenter.current.classList.remove('hidden');\n    });\n  }, [username]);\n\n  useEffect(() => () => {\n    socket.emit('disconnect', username);\n  }, [username]);\n\n  return (\n    <div className=\"mt-12 mb-12 flex flex-col items-center\">\n      <div>\n        {`${username}'s room`}\n      </div>\n      <div\n        ref={shareLinkPresenter}\n        className=\"hidden\">\n        {`Room link: ${`http://localhost:8080/${shareLink}`}`}\n      </div>\n      <div>\n        Peeps talkin and stuff\n    </div>\n    </div>\n  )\n};\n\nexport default ConferenceRoom;"]},"metadata":{},"sourceType":"module"}